version: '3.8'

services:
  # Python文档解析微服务
  python-service:
    build:
      context: ./python_service
      dockerfile: Dockerfile
    container_name: math-doc-python-service
    ports:
      - "8001:8001"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./python_service:/app
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Node.js主API服务
  nodejs-service:
    build:
      context: .
      dockerfile: Dockerfile.nodejs
    container_name: math-doc-nodejs-service
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - PYTHON_SERVICE_URL=http://python-service:8001
      - CHROMA_URL=http://chromadb:8000
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - python-service
      - chromadb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # ChromaDB向量数据库
  chromadb:
    image: chromadb/chroma:latest
    container_name: math-doc-chromadb
    ports:
      - "8000:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    volumes:
      - chromadb_data:/chroma/chroma
      - ./chroma_config:/chroma/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis缓存（可选）
  redis:
    image: redis:7-alpine
    container_name: math-doc-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpassword}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Nginx反向代理（生产环境）
  nginx:
    image: nginx:alpine
    container_name: math-doc-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./static:/var/www/html:ro
    depends_on:
      - nodejs-service
    restart: unless-stopped

volumes:
  chromadb_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: math-doc-network
    driver: bridge 